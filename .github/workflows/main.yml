name: zad2:GitHub_Zadanie 2

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    # Definicja systemu do instalacji na weźle roboczym
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Instalacja środowiska Docker + Buildx

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            zadanie2/app
            ghcr.io/${{ github.repository_owner }}/zadanie2

      - name: Buildx set-up
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:v0.11.0
          buildkitd-flags: --debug

      # Instalacja QEMU
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      # Logowanie do Dockerhub-a
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN_NEXT }}

      - name: Build and push ghcr
        uses: docker/build-push-action@v2
        with:
          platforms: linux/x86_64,linux/arm64/v8
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/zadanie2:x86_64
            ghcr.io/${{ github.repository_owner }}/zadanie2:arm64
            ${{ steps.meta.outputs.tags }}
          #ghcr.io/${{ github.repository_owner }}/zadanie2:zad
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/zadanie2
          cache-to: type=inline

          #cache-from: type=registry,ref=ghcr.io/VoiteckHeira/zadanie2:latest
          #cache-to: type=inline
          #cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/zadanie2:zadanie
          #cache-to: type=inline
      # - name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     repository: ghcr.io/VoiteckHeira/zadanie2
      #     platforms: linux/arm64v8 ,linux/i386 # nie ma node:alpine na i386
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: |
      #       ${{ secrets.DOCKERHUB_USERNAME }}/zadanie2:zadanie
      #     cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/zadanie2:zadanie
      #     cache-to: type=inline
      # - name: Log in to the Container registry
      #   uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      #   with:
      #     registry: https://ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      #   with:
      #     context: image/
      #     push: true
      #     tags: ghcr.io/VoiteckHeira/Zadanie2:latest
      # Budowa obrazu dla dwóch architektur sprzętowych
      # oraz przesłanie do własnego repo na Dockerhub
      # - name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     platforms: linux/arm64v8 ,linux/i386 # nie ma node:alpine na i386
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: |
      #       ${{ secrets.DOCKERHUB_USERNAME }}/zadanie2:zadanie
      #     cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/zadanie2:zadanie
      #     cache-to: type=inline
      #  tags: |
      #    ${{ secrets.DOCKERHUB_USERNAME }}/gha_lab10:zadv1
      #  cache-from: type=registry,ref=gha_lab10:zadv1
      #  cache-to: type=registry,ref=gha_lab10:zadv1,mode=max
      #  tags: |
      #    ${{ secrets.DOCKERHUB_USERNAME }}/gha_lab10:zadv1
      #  cache-from: type=gha
      #  cache-to: type=gha,mode=max

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
